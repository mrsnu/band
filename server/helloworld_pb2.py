# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: helloworld.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10helloworld.proto\x12\nhelloworld\"\x1d\n\x0cHelloRequest\x12\r\n\x05input\x18\x01 \x01(\x0c\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"!\n\x0eStringResponse\x12\x0f\n\x07message\x18\x01 \x01(\t\"\"\n\x0c\x46ileResponse\x12\x12\n\nchunk_data\x18\x01 \x01(\x0c\"/\n\x08MetaData\x12\x10\n\x08\x66ilename\x18\x01 \x01(\t\x12\x11\n\textension\x18\x02 \x01(\t\"O\n\x11UploadFileRequest\x12&\n\x08metadata\x18\x01 \x01(\x0b\x32\x14.helloworld.MetaData\x12\x12\n\nchunk_data\x18\x02 \x01(\x0c\x32\xda\x01\n\x07Greeter\x12>\n\x08SayHello\x12\x18.helloworld.HelloRequest\x1a\x16.helloworld.HelloReply\"\x00\x12K\n\nUploadFile\x12\x1d.helloworld.UploadFileRequest\x1a\x1a.helloworld.StringResponse\"\x00(\x01\x12\x42\n\x0c\x44ownloadFile\x12\x14.helloworld.MetaData\x1a\x18.helloworld.FileResponse\"\x00\x30\x01\x62\x06proto3')



_HELLOREQUEST = DESCRIPTOR.message_types_by_name['HelloRequest']
_HELLOREPLY = DESCRIPTOR.message_types_by_name['HelloReply']
_STRINGRESPONSE = DESCRIPTOR.message_types_by_name['StringResponse']
_FILERESPONSE = DESCRIPTOR.message_types_by_name['FileResponse']
_METADATA = DESCRIPTOR.message_types_by_name['MetaData']
_UPLOADFILEREQUEST = DESCRIPTOR.message_types_by_name['UploadFileRequest']
HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), {
  'DESCRIPTOR' : _HELLOREQUEST,
  '__module__' : 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
  })
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), {
  'DESCRIPTOR' : _HELLOREPLY,
  '__module__' : 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.HelloReply)
  })
_sym_db.RegisterMessage(HelloReply)

StringResponse = _reflection.GeneratedProtocolMessageType('StringResponse', (_message.Message,), {
  'DESCRIPTOR' : _STRINGRESPONSE,
  '__module__' : 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.StringResponse)
  })
_sym_db.RegisterMessage(StringResponse)

FileResponse = _reflection.GeneratedProtocolMessageType('FileResponse', (_message.Message,), {
  'DESCRIPTOR' : _FILERESPONSE,
  '__module__' : 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.FileResponse)
  })
_sym_db.RegisterMessage(FileResponse)

MetaData = _reflection.GeneratedProtocolMessageType('MetaData', (_message.Message,), {
  'DESCRIPTOR' : _METADATA,
  '__module__' : 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.MetaData)
  })
_sym_db.RegisterMessage(MetaData)

UploadFileRequest = _reflection.GeneratedProtocolMessageType('UploadFileRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPLOADFILEREQUEST,
  '__module__' : 'helloworld_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.UploadFileRequest)
  })
_sym_db.RegisterMessage(UploadFileRequest)

_GREETER = DESCRIPTOR.services_by_name['Greeter']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _HELLOREQUEST._serialized_start=32
  _HELLOREQUEST._serialized_end=61
  _HELLOREPLY._serialized_start=63
  _HELLOREPLY._serialized_end=92
  _STRINGRESPONSE._serialized_start=94
  _STRINGRESPONSE._serialized_end=127
  _FILERESPONSE._serialized_start=129
  _FILERESPONSE._serialized_end=163
  _METADATA._serialized_start=165
  _METADATA._serialized_end=212
  _UPLOADFILEREQUEST._serialized_start=214
  _UPLOADFILEREQUEST._serialized_end=293
  _GREETER._serialized_start=296
  _GREETER._serialized_end=514
# @@protoc_insertion_point(module_scope)
